{"version":3,"sources":["check_from.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AA2BA,CAAC,YAAU;AACP,QAAI,QAAQ;;AAER,aAAI,aAAS,GAAT,EAAa,MAAb,EAAoB;AACpB,gBAAI,SAAS,UAAQ,MAAR,GAAe,IAA5B;gBACI,MAAM,IAAI,MAAJ,CAAW,MAAX,CADV;;AAGA,mBAAO,IAAI,IAAJ,CAAS,GAAT,CAAP;AACH,SAPO;;AASR,aAAI,aAAS,GAAT,EAAa,MAAb,EAAoB;AACpB,gBAAI,SAAS,QAAM,MAAN,GAAa,KAA1B;gBACI,MAAM,IAAI,MAAJ,CAAW,MAAX,CADV;;AAGA,mBAAO,IAAI,IAAJ,CAAS,GAAT,CAAP;AACH,SAdO;;AAgBR,cAAK,cAAS,GAAT,EAAa;AACd,mBAAO,IAAI,MAAJ,IAAc,CAArB;AACH,SAlBO;;AAoBR,aAAI,aAAS,IAAT,EAAa;AACb,gBAAG,KAAI,MAAJ,IAAc,CAAjB,EAAmB;AAAC,uBAAO,IAAP;AAAa;;AAEjC,gBAAI,MAAM,yBAAV;AACA,mBAAO,IAAI,IAAJ,CAAS,IAAT,CAAP;AACH,SAzBO;;AA2BR,gBAAO,gBAAS,GAAT,EAAa;AAChB,gBAAG,IAAI,MAAJ,IAAc,CAAjB,EAAmB;AAAC,uBAAO,IAAP;AAAa;;AAEjC,gBAAI,MAAM,OAAV;AACA,mBAAO,IAAI,IAAJ,CAAS,GAAT,CAAP;AACH,SAhCO;;AAkCR,eAAM,eAAS,GAAT,EAAa;AACf,gBAAG,IAAI,MAAJ,IAAc,CAAjB,EAAmB;AAAC,uBAAO,IAAP;AAAa;;AAEjC,gBAAI,MAAM,sCAAV;AACA,mBAAO,IAAI,IAAJ,CAAS,GAAT,CAAP;AACH,SAvCO;;AAyCR,YAAG,YAAS,GAAT,EAAa;AACZ,gBAAG,IAAI,MAAJ,IAAc,CAAjB,EAAmB;AAAC,uBAAO,IAAP;AAAa;;AAEjC,gBAAI,MAAM,eAAV;AACA,mBAAO,IAAI,IAAJ,CAAS,GAAT,CAAP;AACH,SA9CO;;AAgDR,eAAM,eAAS,GAAT,EAAa;AACf,gBAAG,IAAI,MAAJ,IAAc,CAAjB,EAAmB;AAAC,uBAAO,IAAP;AAAa;;AAEjC,gBAAI,MAAM,kEAAV;AACA,mBAAO,IAAI,IAAJ,CAAS,GAAT,CAAP;AACH,SArDO;;AAuDR,eAAM,eAAS,GAAT,EAAa;AACf,gBAAG,IAAI,MAAJ,IAAc,CAAjB,EAAmB;AAAC,uBAAO,IAAP;AAAa;;AAEjC,gBAAI,MAAM,WAAV;AACA,mBAAO,IAAI,IAAJ,CAAS,GAAT,CAAP;AACH,SA5DO;;AA8DR,gBAAQ,gBAAS,GAAT,EAAc;AAClB,gBAAI,IAAI,MAAJ,IAAc,CAAlB,EAAqB;AACjB,uBAAO,IAAP;AACH;;AAGD,gBAAI,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,EAAtC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,CAAb,C;AACA,gBAAI,WAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,CAAf,C;AACA,gBAAG,gBAAgB,IAAhB,CAAqB,GAArB,CAAH,EAA6B;AACzB,oBAAI,MAAM,CAAV;oBAAa,GAAb;AACA,qBAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,IAAI,MAAJ,GAAa,CAAhC,EAAmC,GAAnC,EAAuC;;AAEnC,2BAAO,SAAS,IAAI,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAT,EAA2B,EAA3B,IAAiC,OAAO,CAAP,CAAxC;AACH;;AAED,sBAAM,MAAM,EAAZ;;AAEA,uBAAO,SAAS,GAAT,KAAiB,IAAI,MAAJ,CAAW,EAAX,EAAe,CAAf,EAAkB,WAAlB,EAAxB;AACH,aAVD,MAUK;AACD,uBAAO,KAAP;AACH;;;;AAIJ,SAtFO;;AAwFR,iBAAQ,iBAAS,GAAT,EAAa;AACjB,gBAAG,IAAI,MAAJ,IAAc,CAAjB,EAAmB;AAAC,uBAAO,IAAP;AAAa;;AAEjC,gBAAI,MAAM,oBAAV;AACA,mBAAO,IAAI,IAAJ,CAAS,GAAT,CAAP;AACH,SA7FO;;AA+FR,kBAAU,kBAAS,GAAT,EAAc;AACpB,gBAAI,IAAI,MAAJ,IAAc,CAAlB,EAAqB;AACjB,uBAAO,IAAP;AACH;;AAED,gBAAI,MAAM,8BAAV;AACA,mBAAO,IAAI,IAAJ,CAAS,GAAT,CAAP;AACH;AAtGO,KAAZ;;AA4GA,MAAE,EAAF,CAAK,SAAL,GAAiB,UAAS,QAAT,EAAkB;AAC/B,YAAI,MAAM,EAAE,IAAF,CAAV;YACI,aAAa,IAAI,IAAJ,CAAS,aAAT,CADjB;YAEI,WAAW,EAFf;YAGI,OAAO,EAHX;;AAKA,mBAAW,IAAX,CAAgB,YAAU;AACtB,gBAAI,YAAY,EAAE,IAAF,EAAQ,IAAR,CAAa,MAAb,CAAhB;gBACI,WAAW,EAAE,IAAF,CAAO,EAAE,IAAF,EAAQ,GAAR,EAAP,CADf;gBAEI,UAAU,EAAE,IAAF,EAAQ,IAAR,CAAa,IAAb,CAFd;;AAIA,wBAAY,UAAU,KAAV,CAAgB,GAAhB,CAAZ;;AAEA,iBAAK,OAAL,IAAgB,QAAhB;AACA,iBAAI,IAAI,IAAE,CAAN,EAAQ,IAAE,UAAU,MAAxB,EAA+B,IAAE,CAAjC,EAAmC,GAAnC,EAAuC;AACnC,oBAAI,YAAY,UAAU,CAAV,CAAhB;AACA,oBAAG,UAAU,OAAV,CAAkB,MAAlB,IAA0B,CAAC,CAA3B,IAAgC,UAAU,OAAV,CAAkB,MAAlB,IAA0B,CAAC,CAA9D,EAAgE;AAC5D,gCAAY,UAAU,KAAV,CAAgB,GAAhB,CAAZ;AACA,wBAAI,aAAa,UAAU,CAAV,CAAjB;wBACI,KAAK,SAAS,UAAU,CAAV,CAAT,CADT;;AAGA,wBAAG,CAAC,MAAM,UAAN,CAAJ,EAAsB;AAClB,gCAAQ,GAAR,CAAY,aAAW,QAAvB;AACH,qBAFD,MAEK;AACD,4BAAG,CAAC,MAAM,UAAN,EAAkB,QAAlB,EAA2B,EAA3B,CAAJ,EAAmC;AAC/B,qCAAS,IAAT,CAAc,EAAE,IAAF,CAAd;AACH;AACJ;AACJ,iBAZD,MAYK;AACD,wBAAG,CAAC,MAAM,SAAN,CAAJ,EAAqB;AACjB,gCAAQ,GAAR,CAAY,YAAU,QAAtB;AACH,qBAFD,MAEK;AACD,4BAAG,CAAC,MAAM,SAAN,EAAiB,QAAjB,CAAJ,EAA+B;AAC3B,qCAAS,IAAT,CAAc,EAAE,IAAF,CAAd;AACH;AACJ;AACJ;AACJ;AACJ,SAhCD;;AAmCA,iBAAS,QAAT,EAAkB,IAAlB;AACH,KA1CD;AA2CH,CAxJD","file":"check_from-compiled.js","sourcesContent":["\n\n//正则验证dom中的input，会自动去掉输入的字符串2头的空格\n//规则：   设置在input上   data-rule=\"min:1,max:10,must\"\n\n//max:10    最多10个字符\n//min:1     最少1个字符\n//must      必填项目\n//str       字符串   字符串，数字和下划线\n//number    正整数\n//price     价格带2位小数\n//qq        qq号  5位以上\n//email     邮箱\n//phone     手机号\n//idCard    身份证\n//chinese   中文\n//nickname  中文、英文、数字、下划线\n\n\n//验证时执行\n//$(\"#form\").checkFrom(function(errorDom,data){})\n\n//errorDom  @param:array   验证未通过的input   数组中包含jq对象\n//data      @param:json    元素id为key，值为value的对象\n\n\n\n(function(){\n    let rules = {\n        //不大于多少个字符\n        max:function(str,number){\n            let regStr = \"^.{0,\"+number+\"}$\",\n                reg = new RegExp(regStr);\n\n            return reg.test(str);\n        },\n        //不少于多少个字符\n        min:function(str,number){\n            let regStr = \"^.{\"+number+\",}$\",\n                reg = new RegExp(regStr);\n\n            return reg.test(str);\n        },\n        //判断非空\n        must:function(str){\n            return(str.length != 0);\n        },\n        //字符串，数字和下划线\n        str:function(str){\n            if(str.length == 0){return true;}\n\n            let reg = /^[a-zA-Z][a-zA-Z0-9_]*$/;\n            return reg.test(str);\n        },\n        //正整数\n        number:function(str){\n            if(str.length == 0){return true;}\n\n            let reg = /^\\d*$/;\n            return reg.test(str);\n        },\n        //价格  2为小数\n        price:function(str){\n            if(str.length == 0){return true;}\n\n            let reg = /^(0|[1-9][0-9]{0,9})(\\.[0-9]{1,2})?$/;\n            return reg.test(str);\n        },\n        //qq 号\n        qq:function(str){\n            if(str.length == 0){return true;}\n\n            let reg = /^[1-9]\\d{4,}$/;\n            return reg.test(str);\n        },\n        //邮箱email\n        email:function(str){\n            if(str.length == 0){return true;}\n\n            let reg = /^([0-9a-z][0-9a-z_]*[0-9a-z]|[0-9a-z])@[a-z0-9.-]+\\.[a-z]{2,4}$/i;\n            return reg.test(str);\n        },\n        //手机号码\n        phone:function(str){\n            if(str.length == 0){return true;}\n\n            let reg = /^1\\d{10}$/;\n            return reg.test(str);\n        },\n        //身份证\n        idCard: function(cid) {\n            if (cid.length == 0) {\n                return true;\n            }\n\n\n            var arrExp = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];//加权因子\n            var arrValid = [1, 0, \"X\", 9, 8, 7, 6, 5, 4, 3, 2];//校验码\n            if(/^\\d{17}\\d|x$/i.test(cid)){\n                var sum = 0, idx;\n                for(var i = 0; i < cid.length - 1; i++){\n                    // 对前17位数字与权值乘积求和\n                    sum += parseInt(cid.substr(i, 1), 10) * arrExp[i];\n                }\n                // 计算模（固定算法）\n                idx = sum % 11;\n                // 检验第18为是否与校验码相等\n                return arrValid[idx] == cid.substr(17, 1).toUpperCase();\n            }else{\n                return false;\n            }\n\n            //var reg = /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/;\n            //return reg.test(str);\n        },\n        //中文\n        chinese:function(str){\n            if(str.length == 0){return true;}\n\n            let reg = /^[\\u4E00-\\u9FA5]+$/;\n            return reg.test(str);\n        },\n        //昵称\n        nickname: function(str) {\n            if (str.length == 0) {\n                return true;\n            }\n\n            var reg = /^[\\u4e00-\\u9fa5a-zA-Z0-9_]+$/;\n            return reg.test(str);\n        }\n    };\n\n\n\n\n    $.fn.checkFrom = function(callback){\n        let dom = $(this),\n            checkInput = dom.find(\"[data-rule]\"),\n            errorDom = [],\n            data = {};\n\n        checkInput.each(function(){\n            let that_rule = $(this).data(\"rule\"),\n                this_val = $.trim($(this).val()),\n                this_id = $(this).attr(\"id\");\n\n            that_rule = that_rule.split(\",\");\n\n            data[this_id] = this_val;\n            for(var i=0,l=that_rule.length;i<l;i++){\n                let this_rule = that_rule[i];\n                if(this_rule.indexOf('max:')>-1 || this_rule.indexOf('min:')>-1){\n                    this_rule = this_rule.split(\":\");\n                    let _this_rule = this_rule[0],\n                        _n = parseInt(this_rule[1]);\n\n                    if(!rules[_this_rule]){\n                        console.log(_this_rule+\"  无此正则\");\n                    }else{\n                        if(!rules[_this_rule](this_val,_n)){\n                            errorDom.push($(this));\n                        }\n                    }\n                }else{\n                    if(!rules[this_rule]){\n                        console.log(this_rule+\"  无此正则\");\n                    }else{\n                        if(!rules[this_rule](this_val)){\n                            errorDom.push($(this));\n                        }\n                    }\n                }\n            }\n        });\n\n\n        callback(errorDom,data);\n    };\n})();\n\n\n\n"]}
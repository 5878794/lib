"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}DEVICE.gravitySensor=function(){function sensor(opt){_classCallCheck(this,sensor);this.moveFn=opt.moveFn||function(){};this._init();}_createClass(sensor,[{key:"_init",value:function _init(){this._addEvent();}},{key:"_addEvent",value:function _addEvent(){var _this=this;window.addEventListener("deviceorientation",function(e){_this.handlerEvent(e);},false);}},{key:"handlerEvent",value:function handlerEvent(e){var beta=e.beta,gamma=e.gamma;this._xMove(gamma,beta);}},{key:"_xMove",value:function _xMove(x,y){y=DEVICE.getBetweenNumber(y,-90,90);this.moveFn(x,y);}}]);return sensor;}();

//# sourceMappingURL=gravitySensor-compiled.js.map
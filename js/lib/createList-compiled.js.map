{"version":3,"sources":["createList.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,EAAE,EAAF,CAAK,UAAL,GAAkB,UAAS,IAAT,EAAc,OAAd,EAAsB;;AAEpC,QAAI,OAAO,EAAE,MAAI,OAAN,EAAe,KAAf,GAAuB,GAAvB,CAA2B,EAAC,SAAQ,EAAT,EAA3B,EAAyC,IAAzC,CAA8C,EAAC,IAAG,EAAJ,EAA9C,CAAX;QACI,OAAO,KAAK,IAAL,CAAU,WAAV,CADX;QAEI,OAAO,EAFX;;AAIA,WAAQ,EAAE,OAAF,CAAU,IAAV,CAAD,GAAmB,IAAnB,GAA0B,CAAC,IAAD,CAAjC;;AAGA,SAAI,IAAI,IAAI,CAAR,EAAU,IAAI,KAAK,MAAvB,EAA+B,IAAE,CAAjC,EAAmC,GAAnC,EAAuC;AACnC,YAAI,YAAY,KAAK,CAAL,CAAhB;;AAEA,YAAI,SAAS,KAAK,OAAL,CAAa,oDAAb,EAAkE,UAAS,CAAT,EAAW;AACtF,gBAAI,EAAE,MAAF,CAAS,CAAT,EAAW,EAAE,MAAF,GAAS,CAApB,CAAJ;AACA,gBAAI,EAAE,OAAF,CAAU,KAAV,EAAgB,YAAhB,CAAJ;AACA,gBAAI,KAAK,CAAL,CAAJ;AACA,mBAAO,CAAP;AACH,SALY,CAAb;;AAOA,aAAK,IAAL,CAAU,MAAV;AACH;;AAED,QAAI,QAAQ,KAAK,IAAL,CAAU,EAAV,CAAZ;QACI,OAAO,EAAE,KAAF,CADX;;AAGA,MAAE,IAAF,EAAQ,MAAR,CAAe,IAAf;AACH,CA1BD","file":"createList-compiled.js","sourcesContent":["\n//自动绑定数据\n//$.fn.createList(data,cloneId)\n//插入到指定对象内的数据\n//{}内为eval部分\n//html中需要指定data中的数据以$开头\n\n\n\n\n\n\n\n\n\n//html部分   display:none  写在html上不要写在css内\n//<div id=\"test123\" style=\"display: none;\">\n//    <div>{$a*100}</div>\n//    <div>{$b+$g.a*3-3}</div>\n//    <div>{$c*1}</div>\n//    <div>{$d-2}</div>\n//    <div>{parseInt($e/3)}</div>\n//    <div>{aa($f%3)}</div>\n//</div>\n\n\n//<script>部分\n//abc = {\n//    a:1,\n//    b:2,\n//    c:3,\n//    d:4,\n//    e:5,\n//    f:6,\n//    g:{\n//        a:22\n//    }\n//};\n//var aa = function(val){\n//        return 123;\n//    }\n//</script>\n\n//运行。。。。。。\n//$(\"body\").createList(abc,\"test123\")\n\n\n//输出\n//<div id=\"\">\n    //<div>100</div>\n    //<div>65</div>\n    //<div>3</div>\n    //<div>2</div>\n    //<div>1</div>\n    //<div>123</div>\n//</div>\n\n\n\n$.fn.createList = function(data,cloneId){\n\n    let list = $(\"#\"+cloneId).clone().css({display:\"\"}).attr({id:\"\"}),\n        html = list.prop(\"outerHTML\"),\n        text = [];\n\n    data = ($.isArray(data))? data : [data];\n\n\n    for(var i = 0,l = data.length; i<l;i++){\n        let this_data = data[i];\n\n        let newStr = html.replace(/\\{[a-z_\\$\\(][a-z0-9_\\.\\s\\[\\]\\+\\-\\*\\/\\%\\$\\(\\)]*\\}/ig,function(a){\n            a = a.substr(1,a.length-2);\n            a = a.replace(/\\$/g,\"this_data.\");\n            a = eval(a);\n            return a;\n        });\n\n        text.push(newStr);\n    }\n\n    let htmls = text.join(\"\"),\n        doms = $(htmls);\n\n    $(this).append(doms);\n};\n\n\n"]}